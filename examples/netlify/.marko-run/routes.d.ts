/*
  WARNING: This file is automatically generated and any changes made to it will be overwritten without warning.
  Do NOT manually edit this file or your changes will be lost.
*/

import "@marko/run/namespace";
import type Run from "@marko/run";
import type { NetlifyEdgePlatformInfo } from '@marko/run-adapter-netlify';

type Route1 = Run.Route<[], typeof import("../src/routes/+meta.json"), `/`>;

declare module "@marko/run" {
	interface Platform extends NetlifyEdgePlatformInfo {}

	interface AppData {
		routes: Route1;
		get: "/";
		post: "/";
	}
}

declare module "../src/routes/+handler" {
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route1;
    export type Context = Run.Context<Route>;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/+middleware" {
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route1;
    export type Context = Run.Context<Route>;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/+page.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route1;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/+layout.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route1;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/+404.marko" {
  export interface Input {}
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Run.Route;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/+500.marko" {
  export interface Input {
    error: unknown;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = globalThis.MarkoRun.Route;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}
