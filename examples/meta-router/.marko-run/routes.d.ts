/*
  WARNING: This file is automatically generated and any changes made to it will be overwritten without warning.
  Do NOT manually edit this file or your changes will be lost.
*/

import "@marko/run/namespace";
import type Run from "@marko/run";
import type { NodePlatformInfo } from '@marko/run-adapter-node'

type Route1 = Run.Route<[], typeof import("../src/routes/+meta.json"), `/`>;
type Route2 = Run.Route<[], undefined, `/users`>;
type Route3 = Run.Route<["id"], undefined, `/users/:id`>;
type Route4 = Run.Route<[], undefined, `/users/foo`>;
type Route5 = Run.Route<["rest"], undefined, `/other/:rest*`>;

declare module "@marko/run" {
	interface Platform extends NodePlatformInfo {}

	interface AppData {
		routes: Route1 | Route2 | Route3 | Route4 | Route5;
		get: "/" | "/users" | "/users/${id}" | "/users/foo" | "/other" | "/other/${...rest}";
		post: "/";
	}
}

declare module "../src/routes/+handler.js" {
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route1;
    export type Context = Run.Context<Route>;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/other/$$rest/+handler" {
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route5;
    export type Context = Run.Context<Route>;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/+middleware.js" {
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route1 | Route2 | Route3 | Route4 | Route5;
    export type Context = Run.Context<Route>;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/_one/users/$id/+middleware.js" {
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route3;
    export type Context = Run.Context<Route>;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/+page.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route1;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/_one/users/+page.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route2;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/_one/users/$id/+page.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route3;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/_two/users/foo/+page.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route4;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/other/$$rest/+page.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route5;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/+layout.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route1 | Route2 | Route3 | Route4 | Route5;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/_one/users/+layout.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route2 | Route3;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/_one/users/$id/+layout.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = Route3;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}

declare module "../src/routes/+500.marko" {
  export interface Input {
    error: unknown;
  }
  namespace MarkoRun {
    export * from "@marko/run/namespace";
    export type Route = globalThis.MarkoRun.Route;
    export type Context = Run.Context<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Handler>;
  }
}
