/*
  WARNING: This file is automatically generated and any changes made to it will be overwritten without warning.
  Do NOT manually edit this file or your changes will be lost.
*/

import { NotHandled, NotMatched, GetPaths, PostPaths, GetablePath, GetableHref, PostablePath, PostableHref, Platform } from "@marko/run/namespace";
import type Run from "@marko/run";


declare module "@marko/run" {
	interface AppData extends Run.DefineApp<{
		routes: {
			"/": Routes["/foo,_/_,bar/,baz,"]
			"/foo": Routes["/foo,_/_,bar/,baz,"]
			"/bar": Routes["/foo,_/_,bar/,baz,"]
			"/foo/bar": Routes["/foo,_/_,bar/,baz,"]
			"/baz": Routes["/foo,_/_,bar/,baz,"]
			"/foo/baz": Routes["/foo,_/_,bar/,baz,"]
			"/bar/baz": Routes["/foo,_/_,bar/,baz,"]
			"/foo/bar/baz": Routes["/foo,_/_,bar/,baz,"]
		}
	}> {}
}

declare module "./foo,_/_,bar/,baz,/+page.marko" {
  export interface Input {
    renderBody: Marko.Body;
  }
  namespace MarkoRun {
    export { NotHandled, NotMatched, GetPaths, PostPaths, GetablePath, GetableHref, PostablePath, PostableHref, Platform };
    export type Route = Run.Routes["/" | "/foo" | "/bar" | "/foo/bar" | "/baz" | "/foo/baz" | "/bar/baz" | "/foo/bar/baz"];
    export type Context = Run.MultiRouteContext<Route> & Marko.Global;
    export type Handler = Run.HandlerLike<Route>;
    export const route: Run.HandlerTypeFn<Route>;
  }
}

type Routes = {
	"/foo,_/_,bar/,baz,": { verb: "get"; };
}
